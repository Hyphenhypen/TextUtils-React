{"version":3,"sources":["components/Navbar.js","components/About.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","aria-current","to","onClick","toggleMode","htmlfor","About","_useState","useState","color","backgroundColor","border","_useState2","Object","slicedToArray","myStyle","setmyStyle","_useState3","_useState4","btntext","setbtnText","style","aria-labelledby","data-bs-parent","Textform","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","filter","element","length","Alert","alert","role","msg","data-bs-dismiss","defaultProps","App","setMode","setAlert","showAlert","message","body","setInterval","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9569d27a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    {props.title}\r\n                </a>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"\">\r\n                                Services\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input\r\n                            className=\"form-control me-2\" \r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                        />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                            Search\r\n                        </button>\r\n                    </form> */}\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </nav> \r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps={\r\n    title:\"Set title here\",\r\n}       \r\n","import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [myStyle, setmyStyle] = useState({\r\n        color:'black',\r\n        backgroundColor:'white',\r\n        border: '2px solid light'\r\n    })\r\n\r\n    const [btntext, setbtnText] = useState(\"Enable Dark Mode\")\r\n    const togglestyle = ()=>{\r\n        if(myStyle.color==='white'){\r\n            setmyStyle({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n            })\r\n            setbtnText(\"Enable Dark Mode\")\r\n        }\r\n        else{\r\n            setmyStyle({\r\n                color:'white',\r\n                backgroundColor:'black'              \r\n            })\r\n            setbtnText(\"Enable Light Mode\")\r\n        }\r\n    }\r\n    return (\r\n    <div className='container' style={myStyle}>\r\n        <h1>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" style={myStyle}aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n            Analyze your text\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n            This helps us in building textUtils website which tells us basic about react js.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            Accordion Item #2\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" style={myStyle} aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n            Accordion Item #3\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n         </div>\r\n    </div>\r\n    </div>\r\n    <div className=\"container my-1\">\r\n    <button onClick={togglestyle} type =\"button\" className='btn btn-primary'>{btntext}</button>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = ()=>{\r\n    // console.log(\"Upper Case was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n  }\r\n  const handleloClick = ()=>{\r\n    // console.log(\"Upper Case was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n  }\r\n  const handlecleartext = ()=>{\r\n    // console.log(\"Upper Case was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText)\r\n  }\r\n\r\n  const handlecopy =()=>{\r\n   console.log(\"I am copy\");\r\n   var text = document.getElementById(\"myBox\");\r\n   text.select();\r\n   text.setSelectionRange(0,9999);\r\n   navigator.clipboard.writeText(text.value);\r\n  }\r\n\r\n  const handleOnChange = (event)=>{\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleExtraspaces=()=>{\r\n    let newText = text.split(/[ ] + /);\r\n    setText(newText.join(\" \"))\r\n  }\r\n  const [text, setText] = useState('Enter text here');\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Upper Case</button>\r\n      <button className=\"btn btn-primary mx-2 my-1\" onClick={handleloClick}>Convert to Lower Case</button>\r\n      <button className=\"btn btn-primary mx-2 my-1\" onClick={handlecleartext}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-2 my-1\" onClick={handlecopy}>Copy to Clipboard</button>\r\n      <button className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraspaces}>Remove Extra Spaces</button>\r\n      \r\n    </div>\r\n    <div className=\"container\">\r\n      <h1>Your text summary</h1>\r\n      <p>{text.split(\" \").filter((element)=>{return element.length!=0}).length} words and {text.length} characters</p>\r\n      <p>{0.008* (text.split(\" \").length-1)} minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n  }\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n      props.alert && <div className={`alert alert--${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/About\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert,setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n  }\n  \n  const toggleMode = ()=> {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode has been enabled\",\"Success\");\n      setInterval(()=>{\n        document.title = 'TextUtils is amazing';\n      }, 1500)\n\n      setInterval(()=>{\n        document.title = 'Install TextUtils now';\n      }, 2000)\n\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\",\"Success\");\n      document.title = 'TextUtils-Light Mode';\n    }\n  }\n\n  return (\n    <>\n      <Router>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <Routes>\n          <Route exact path=\"/\" element={<Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>} >\n          {/* <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/> */}\n          </Route> \n          <Route exact path=\"/about\" element={<About/>} >\n          </Route>\n        </Routes>\n            </div>\n        </Router> \n            {/* <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/> */}\n            {/* <About/> */}\n      {/* <Textform heading=\"Enter the text to analyze below\"/> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}