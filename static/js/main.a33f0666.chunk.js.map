{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlfor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Alert","alert","role","msg","data-bs-dismiss","defaultProps","App","setMode","_useState3","_useState4","setAlert","showAlert","message","body","style","backgroundColor","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a33f0666.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    {props.title}\r\n                </a>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                                Home\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">\r\n                                About\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">\r\n                                Services\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input\r\n                            className=\"form-control me-2\" \r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                        />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                            Search\r\n                        </button>\r\n                    </form> */}\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </nav> \r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps={\r\n    title:\"Set title here\",\r\n}       \r\n","import React, { useState } from \"react\"\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = ()=>{\r\n    // console.log(\"Upper Case was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n  }\r\n  const handleloClick = ()=>{\r\n    // console.log(\"Upper Case was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n  }\r\n  const handlecleartext = ()=>{\r\n    // console.log(\"Upper Case was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText)\r\n  }\r\n\r\n  const handlecopy =()=>{\r\n   console.log(\"I am copy\");\r\n   var text = document.getElementById(\"myBox\");\r\n   text.select();\r\n   text.setSelectionRange(0,9999);\r\n   navigator.clipboard.writeText(text.value);\r\n  }\r\n\r\n  const handleOnChange = (event)=>{\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleExtraspaces=()=>{\r\n    let newText = text.split(/[ ] + /);\r\n    setText(newText.join(\" \"))\r\n  }\r\n  const [text, setText] = useState('Enter text here');\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Upper Case</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleloClick}>Convert to Lower Case</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handlecleartext}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handlecopy}>Copy to Clipboard</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleExtraspaces}>Remove Extra Spaces</button>\r\n      \r\n    </div>\r\n    <div className=\"container\">\r\n      <h1>Your text summary</h1>\r\n      <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n      <p>{0.008* (text.split(\" \").length-1)} minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n  }\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n      props.alert && <div className={`alert alert--${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport About from \"./components/About\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert,setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type: type\n    })\n  }\n  \n  const toggleMode = ()=> {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode has been enabled\",\"Success\");\n      setInterval(()=>{\n        document.title = 'TextUtils is amazing';\n      }, 1500)\n\n      setInterval(()=>{\n        document.title = 'Install TextUtils now';\n      }, 2000)\n\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\",\"Success\");\n      document.title = 'TextUtils-Light Mode';\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Routes>\n          <Route exact path=\"/\" element={<Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>} > */}\n          <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route> */}\n          {/* <Route exact path=\"/about\" element={<About/>} >\n          </Route>\n        </Routes> */}\n            </div>\n        {/* </Router> */}\n            {/* <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/> */}\n            {/* <About/> */}\n      {/* <Textform heading=\"Enter the text to analyze below\"/> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}